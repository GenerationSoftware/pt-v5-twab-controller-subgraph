type Vault @entity {
    id: Bytes!
    totalSupply: BigInt!
    totalDelegateBalance: BigInt!
    totalDelegateTwab: BigInt!
    supplyChanges: [VaultSupplyChange!]! @derivedFrom(field: "vault")
    twabObservations: [VaultTwabObservation!]! @derivedFrom(field: "vault")
    accounts: [Account!]! @derivedFrom(field: "vault")
}

type User @entity {
    id: Bytes! # user's address
    accounts: [Account!]! @derivedFrom(field: "user")
}

type Account @entity {
    id: String! # vault address + user address
    vault: Vault!
    user: User!
    balance: BigInt! # balance in account
    delegateBalance: BigInt! # amount of balance delegated to this account
    delegateTwab: BigInt! # last observed weighted balance delegated to this account
    balanceChanges: [BalanceChange!]! @derivedFrom(field: "account")
    twabObservations: [TwabObservation!]! @derivedFrom(field: "account")
    delegators: [Account!]! @derivedFrom(field: "delegate") # accounts who delegated to this account
    delegate: Account # account to whom this account delegates their balances
}

type BalanceChange @entity {
    id: String! # account ID + timestamp
    amount: BigInt!
    delegateAmount: BigInt!
    newBalance: BigInt!
    newDelegateBalance: BigInt!
    timestamp: BigInt!
    account: Account!
}

type VaultSupplyChange @entity {
    id: String! # vault address + timestamp
    amount: BigInt!
    newTotalSupply: BigInt!
    timestamp: BigInt!
    vault: Vault!
}

type TwabObservation @entity {
    id: String! # account ID + timestamp
    account: Account!
    balance: BigInt!
    delegateBalance: BigInt!
    delegateTwab: BigInt! # aka. cumulativeBalance
    timestamp: BigInt!
    isNew: Boolean!
}

type VaultTwabObservation @entity {
    id: String! # Vault ID + timestamp
    vault: Vault!
    balance: BigInt!
    delegateBalance: BigInt!
    delegateTwab: BigInt! # aka. cumulativeBalance
    timestamp: BigInt!
    isNew: Boolean!
}

type Vault @entity {
    id: Bytes!
    balance: BigInt!
    delegateBalance: BigInt!
    balanceUpdates: [VaultBalanceUpdate!]! @derivedFrom(field: "vault")
    observations: [VaultObservation!]! @derivedFrom(field: "vault")
    accounts: [Account!]! @derivedFrom(field: "vault")
}

type User @entity {
    id: Bytes! # user's address
    accounts: [Account!]! @derivedFrom(field: "user")
}

type Account @entity {
    id: String! # vault address + user address
    vault: Vault!
    user: User!
    balance: BigInt! # balance in account
    delegateBalance: BigInt! # amount of balance delegated to this account
    balanceUpdates: [AccountBalanceUpdate!]! @derivedFrom(field: "account")
    observations: [AccountObservation!]! @derivedFrom(field: "account")
    delegators: [Account!]! @derivedFrom(field: "delegate") # accounts who delegated to this account
    delegate: Account # account to whom this account delegates their balances
}

type AccountBalanceUpdate implements BalanceUpdate @entity {
    id: ID!
    amount: BigInt!
    delegateAmount: BigInt!
    balance: BigInt!
    delegateBalance: BigInt!
    timestamp: BigInt!
    account: Account!
}

type VaultBalanceUpdate implements BalanceUpdate @entity {
    id: ID!
    amount: BigInt!
    delegateAmount: BigInt!
    balance: BigInt!
    delegateBalance: BigInt!
    timestamp: BigInt!
    vault: Vault!
}

type AccountObservation implements Observation @entity {
    id: ID!
    account: Account!
    balance: BigInt!
    delegateBalance: BigInt!
    cumulativeBalance: BigInt!
    timestamp: BigInt!
    isNew: Boolean!
}

type VaultObservation implements Observation @entity {
    id: ID!
    vault: Vault!
    balance: BigInt!
    delegateBalance: BigInt!
    cumulativeBalance: BigInt!
    timestamp: BigInt!
    isNew: Boolean!
}

interface BalanceUpdate {
    amount: BigInt!
    delegateAmount: BigInt!
    balance: BigInt!
    delegateBalance: BigInt!
    timestamp: BigInt!
}

interface Observation {
    balance: BigInt!
    delegateBalance: BigInt!
    cumulativeBalance: BigInt!
    timestamp: BigInt!
}